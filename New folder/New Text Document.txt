#include <bits/stdc++.h>

using namespace std;
#define   sz  8

int board[8][8];
int sol = 0 ;

bool valid(int row,int col) {

    int i ,j;
    for(i =0 ; i < col; i++) {
        if(board[row][i]) return 0;
    }
    //upper left diagonal
    for(i = row, j = col; i >= 0 && j >= 0 ;i-- ,j--) {
        if(board[i][j]) return 0;
    }
    //lower diagonal on left side
    for(i = row, j = col; j >= 0  && i <sz ; i++,j--) {
          if(board[i][j]) return 0;
    }

    //kisu na pile return true korbo :D
    return 1;
}

int solveNQ(int c) {

    // base case

    if(c >= sz)   {

            //sol++;
            return 1;
    }

    int i;

    /*generating all possible combination
    placing queen  al  row according to this comun*/
    for(i = 0 ; i < sz; i++) {

        //chehk if th queen can be placed or not
        if(valid(i , c)) {
            //place the queen in board
            board[i][c] = 1;

            if(solveNQ(c+1))  {
                   // return 1;

                  // memset(board,0,sizeof(board));
                   sol++;
                    //sol++;
            }

            //not leading any solution then free the place
             board[i][c] = 0;
        }

    }

    return 0;
}
int main()
{
    /*if(solveNQ(0) == 0) {
        cout<<"solution doesn't exist"<<endl;

        //return 0;
    }*/
    int call = solveNQ(0);
    cout<<sol<<endl;

    //print the solution is a solution is exist
    /*int i , j;
    for(i = 0 ; i <sz; i++) {
        for(j = 0; j<sz; j++) {
            cout<<board[i][j]<<" ";
        }
        cout<<endl;
    }*/
    return 0;
}
